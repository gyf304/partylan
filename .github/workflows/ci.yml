name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_BUILD_TYPE: MinSizeRel
  STEAMWORKS_SDK_URL: ${{secrets.STEAMWORKS_SDK_URL}}

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        os: [windows]
        arch: [x86, x86_64]

    runs-on: ${{matrix.os}}-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set Build Variables
      shell: bash
      run: |
        [ "${{matrix.os}}" == windows ] && echo "CMAKE_GENERATOR=Visual Studio 17 2022" >>${GITHUB_ENV} || true
        [ "${{matrix.os}}" == windows ] && [ "${{matrix.arch}}" == "x86"    ] && echo "CMAKE_GENERATOR_PLATFORM=Win32" >>${GITHUB_ENV} || true
        [ "${{matrix.os}}" == windows ] && [ "${{matrix.arch}}" == "x86_64" ] && echo "CMAKE_GENERATOR_PLATFORM=x64"   >>${GITHUB_ENV} || true

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake ../

    - name: Build
      working-directory: ${{github.workspace}}/build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{env.CMAKE_BUILD_TYPE}}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: partylan-${{matrix.os}}-${{matrix.arch}}
        path: build/${{env.CMAKE_BUILD_TYPE}}/
